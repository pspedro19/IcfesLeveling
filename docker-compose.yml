version: '3.8'

services:
  # Frontend - Next.js 14
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:4001"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8006
      - NEXT_PUBLIC_WS_URL=ws://localhost:8003
    depends_on:
      - backend
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    networks:
      - gameplay-network

  # Backend API - FastAPI
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    ports:
      - "8006:8000"
    environment:
      - DATABASE_URL=postgresql://gameplay:gameplay123@postgres:5432/gameplay_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CLICKHOUSE_URL=clickhouse://default:clickhouse123@clickhouse:9000/gameplay_analytics
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/backend:/app
    networks:
      - gameplay-network

  # WebSocket Gateway
  websocket:
    build:
      context: ./apps/websocket
      dockerfile: Dockerfile
    ports:
      - "8003:8001"
    environment:
      - REDIS_URL=redis://redis:6379
      - BACKEND_URL=http://backend:8000
    depends_on:
      - redis
      - backend
    volumes:
      - ./apps/websocket:/app
    networks:
      - gameplay-network

  # AI Service
  ai-service:
    build:
      context: ./apps/ai-service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    volumes:
      - ./apps/ai-service:/app
    networks:
      - gameplay-network

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=gameplay_db
      - POSTGRES_USER=gameplay
      - POSTGRES_PASSWORD=gameplay123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - gameplay-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gameplay-network

  # ClickHouse Analytics
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      - CLICKHOUSE_DB=gameplay_analytics
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=clickhouse123
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./database/clickhouse-init:/docker-entrypoint-initdb.d
    networks:
      - gameplay-network

  # Celery Worker
  celery-worker:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    command: celery -A app.celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://gameplay:gameplay123@postgres:5432/gameplay_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/backend:/app
    networks:
      - gameplay-network

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    command: celery -A app.celery beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://gameplay:gameplay123@postgres:5432/gameplay_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/backend:/app
    networks:
      - gameplay-network

volumes:
  postgres_data:
  redis_data:
  clickhouse_data:

networks:
  gameplay-network:
    driver: bridge 